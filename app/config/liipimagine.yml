# app/config/config.yml

liip_imagine:
    resolvers:
        default:
            web_path:
                web_root: %kernel.root_dir%/../web
                cache_prefix: media/cache

    loaders:
        default:
            filesystem:
                data_root: %kernel.root_dir%/../web/

    driver:               gd
    cache:                default
    data_loader:          default
    default_image:        null
    controller:
        filter_action:         liip_imagine.controller:filterAction
        filter_runtime_action: liip_imagine.controller:filterRuntimeAction
    filter_sets:
        # Prototype
        pouet:
            quality:              100
            jpeg_quality:         ~
            png_compression_level:  ~
            png_compression_filter: ~
            animated:             false
            format:               ~
            cache:                ~
            data_loader:          ~
            default_image:        null
            filters:

                # Prototype
                name:                 []

            post_processors:

                # Prototype
                name:                 []
        # the name of the "filter set"
        actualites:
            # adjust the image quality to 75%
            quality: 75
            # list of transformations to apply (the "filters")
            filters:
                # create a thumbnail: set size to 120x90 and use the "outbound" mode
                # to crop the image when the size ratio of the input differs
                thumbnail: { size: [303, 228], mode: outbound }

                # create a 2px black border: center the thumbnail on a black background
                # 4px larger to create a 2px border around the final image
                background: { size: [305, 230], position: center, color: '#000000' }
